import asyncio
from app.broker import broker
from app.websocket import OKXWebsocketsChannel
from app.redis_storage import get_connection, store_connection

@broker.subscriber("websocket_tasks")
async def websocket_task(config: dict):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Redis"""
    user_id = config["user_id"]
    store_connection(user_id, config)

    ws_channel = OKXWebsocketsChannel(config)
    await ws_channel.subscribe_to_updates()

@broker.subscriber("update_subscriptions")
async def update_subscriptions(data: dict):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ —Ä–∞–∑—Ä—ã–≤–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    user_id = data["user_id"]
    config = get_connection(user_id)
    if config:
        config.update(data)
        store_connection(user_id, config)
        ws_channel = OKXWebsocketsChannel(config)
        await ws_channel._subscribe_channels()
        print(f"[{user_id}] –ü–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {config}")

async def restart_lost_connections():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç WebSocket –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è Redis"""
    while True:
        await asyncio.sleep(10)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
        for key in redis_client.keys("user_connection:*"):
            user_id = key.decode().split(":")[-1]
            config = get_connection(user_id)
            if config:
                print(f"‚ö†Ô∏è [{user_id}] –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—Ç–∫–ª—é—á—ë–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...")
                ws_channel = OKXWebsocketsChannel(**config)
                await ws_channel.subscribe_to_updates()


async def restore_connections():
    """–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–∏—Å–∞ –ø—ã—Ç–∞–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏–∑ Redis"""
    await asyncio.sleep(2)  # –î–∞–µ–º —Å–µ—Ä–≤–∏—Å—É –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
    
    for key in redis_client.keys("user_connection:*"):
        user_id = key.decode().split(":")[-1]
        config = get_connection(user_id)
        if config:
            print(f"üöÄ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ WebSocket –¥–ª—è {user_id}...")
            ws_channel = OKXWebsocketsChannel(config)
            await ws_channel.subscribe_to_updates()
    
    print("‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
